/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * BLOCKCHAIN HALAL PLATFORM MODEL
 * Model dalam file ini menjelaskan beberapa hal berikut : 
 * - 
 */
namespace org.prototype.blockchainhalal

/** 
 * AKTOR 1 : REGULATOR ( MUI / BPJPH / MUI REGIONAL)
 * Deskripsi Aktor : Regulator merupakan organisasi / lembaga yang dapat melakukan issue id * untuk dapat mengakses sistem
 * Identifikasi berdasarkan email untuk id 
 */

participant Regulator identified by RegulatorEmail {
  o String RegulatorEmail
  o String RegulatorName
  o String RegulatorBranch
  o String RegulatorAdress
  o String RegulatorContact
}

/** 
 * this section defines all participant in the halal blockchain network 
 */
abstract participant Company identified by CompanyEmail {
  o String CompanyEmail 
  o String CompanyName 
  o String CompanyDesc
  o String CompanyAdress
  o String CompanyContact
}

participant SupplyCompany extends Company {
  o CompanyType Type default ="Supplier"
}

participant ManufacturingCompany extends Company {
  o CompanyType Type default ="Manufacturer"
}

participant DistributionCompany extends Company {
  o CompanyType Type default ="Distributor"
}

participant RetailCompany extends Company {
  o CompanyType Type default ="Retailer"  
}


/**
 * This section defines the asset for the halal product implemented in the blockchain-halal network
 * 
 */

abstract asset Product identified by productID {
  o String productID
  --> Company CurrentOwner
  o String productDesc
  o ProductStatus productStatus
  o DateTime productionDate
  o DateTime expirationDate
  o String CertificateLink
  o ProductType productTypes
  o ProductOwnershipHistory[] productHistory
}

/** 
 * Raw Product = Bahan dalam definisi UU 33 No 2014
 */
asset RawProduct extends Product{
  
}

/** 
 * ProcProduct = produk yang diproduksi dan disertifikasi halal 
 */
asset ProcProduct extends Product{
  --> Product[] composition
}

asset Package identified by packageID {
  o String packageID 
  o String packageName
  --> Company packageOwner
  --> Product[] productList
}

concept ProductOwnershipHistory {
  --> Company Owner 
  o DateTime ReceiveDate
  o DateTime EndDate
}

enum ProductType{
  o AnimalProduct // ex : eggs, milk, cheese, yogurt, etc
  o Vegetables 
  o Fruits 
  o Meats
  o Grains //beans included here 
  o Beverages
  o Dish 
  o PackagedProduct
}

enum ProductCode{
  o DRY // Dairy. refers to AnimalProduct ex : eggs, milk, cheese, yogurt, etc
  o VGT // Vegetables
  o FRT // Fruits
  o MTS // Meats
  o GRN // beans included here 
  o BVG // Beverages
  o DSH // Dishes
  o PCK // Packaged Product
  o MDC // Medicine
}

/**
*   Product Status dibuat berdasarkan breakdown state yang ada dari product journey berikut 
*   Pembuatan produk mentah (created-->Owned) --> pengolahan produk mentah (processed) --> packagingproduct (packaged)
*   --> proses pengiriman (in_transit) --> penerimaan produk perusahaan lain (received) --> penolakan product (reject) or  setuju
*   penerimaan (owned) --> product terjual (sold) --> product expired (expired)
*/
enum ProductStatus {
  o Created
  o Expired
  o Processed
  o Packaged
  o In_Transit 
  o Received
  o Rejected 
  o Owned
  o Sold 
}
// This is actually not used
enum ParticipantType {
  o Regulator 
  o Companies
}

// This is actually a bit useless too as acl not defined by variables
enum CompanyType {
  o Supplier
  o Manufacturer
  o Distributor
  o Retailer
}


/**
 * THIS SECTION DEFINES TRANSACTION THAT CAN HAPPEN IN BLOCKCHAIN 
 * LIST OF TRANSACTION : 
 * 1. Create Raw Product 
 * 2. Create PRocessed Product 
 * 3. Create Companies
 * 4. 
 */

transaction CreateRawProduct {
  o String productID
  o String productDesc
  o ProductStatus productStatus
  o DateTime productionDate
  o DateTime expirationDate
  o ProductType productTypes default ="Not_Specified"
  o String CertificateLink
}

transaction CreateProcProduct {
  o String productID
  o String productDesc
  o ProductStatus productStatus
  o DateTime productionDate
  o DateTime expirationDate
  --> Product[] composition
  o String CertificateLink
}

transaction CreatePackage {
 o String packageID
 o String packageName
 --> Company packageOwner
 --> Product[] ProductList
}

//== IMPLEMENTED UNTIL THIS LINE

transaction SendPackage {
 --> Package ShippedPackage
 --> Company NewOwner
}


transaction ReveivePackage {
 --> Package ShippedPackage
 --> Company LastOwner
}
transaction ReturnPackage {
  --> Package ShippedPackage
  --> Company LastOwner
}
transaction RecordProductHistory{
  --> Product product
  o ProductOwnershipHistory history
}

transaction Init{

}